{"name": "Successful login with valid credentials", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\login_steps.py\", line 8, in step_impl\n    context.browser = webdriver.Chrome()\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 50, in __init__\n    if finder.get_browser_path():\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 47, in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 67, in _binary_paths\n    output = SeleniumManager().binary_paths(self._to_args())\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 54, in binary_paths\n    return self._run(args)\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 114, in _run\n    completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 495, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 1028, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 1399, in _communicate\n    self.stdout_thread.join(self._remaining_time(endtime))\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\threading.py\", line 1011, in join\n    self._wait_for_tstate_lock()\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\threading.py\", line 1027, in _wait_for_tstate_lock\n    elif lock.acquire(block, timeout):\n"}, "steps": [{"name": "Given a web browser is at the todoist login page", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\login_steps.py\", line 8, in step_impl\n    context.browser = webdriver.Chrome()\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 50, in __init__\n    if finder.get_browser_path():\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 47, in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 67, in _binary_paths\n    output = SeleniumManager().binary_paths(self._to_args())\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 54, in binary_paths\n    return self._run(args)\n  File \"C:\\Users\\lclar\\Documents\\todoist - Selenium\\.venv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 114, in _run\n    completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 495, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 1028, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\subprocess.py\", line 1399, in _communicate\n    self.stdout_thread.join(self._remaining_time(endtime))\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\threading.py\", line 1011, in join\n    self._wait_for_tstate_lock()\n  File \"C:\\Users\\lclar\\AppData\\Local\\Programs\\Python\\Python38\\lib\\threading.py\", line 1027, in _wait_for_tstate_lock\n    elif lock.acquire(block, timeout):\n"}, "start": 1722642951645, "stop": 1722643098966}, {"name": "When a user enters the Todoist username \"fernandezfreddy778@gmail.com\" and the Todoist password \"password1707\" and clicks on the Todoist login button", "status": "skipped", "start": 1722643098969, "stop": 1722643098969}, {"name": "Then the Todoist url will contain \"app.todoist.com\"", "status": "skipped", "start": 1722643098969, "stop": 1722643098969}], "start": 1722642951644, "stop": 1722643098969, "uuid": "808dbfd8-6826-436d-a918-e4b900b31161", "historyId": "e817b21a0b9ebd7bc9dbb268ad552469", "fullName": "Todoist Login: Successful login with valid credentials", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Todoist Login"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}